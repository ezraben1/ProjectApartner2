# Generated by Django 4.2 on 2023-04-20 14:35

import core.validators
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('user_type', models.CharField(choices=[('owner', 'Owner'), ('renter', 'Renter'), ('searcher', 'Searcher')], max_length=10)),
                ('is_superuser', models.BooleanField(default=False, null=True)),
                ('first_name', models.CharField(blank=True, default='', max_length=30)),
                ('last_name', models.CharField(blank=True, default='', max_length=30)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('custom_groups', models.ManyToManyField(blank=True, related_name='custom_users', to='auth.group')),
                ('custom_user_permissions', models.ManyToManyField(blank=True, related_name='custom_users', to='auth.permission')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(help_text='The address of the apartment.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='A description of the apartment.', null=True)),
                ('size', models.CharField(help_text='The size of the apartment.', max_length=50)),
                ('balcony', models.BooleanField(default=False, help_text='Whether the apartment has a balcony.', null=True)),
                ('bbq_allowed', models.BooleanField(default=False, help_text='Whether BBQs are allowed on the apartment.')),
                ('smoking_allowed', models.BooleanField(default=False, help_text='Whether smoking is allowed in the apartment.')),
                ('allowed_pets', models.BooleanField(default=False, help_text='Whether pets are allowed in the apartment.')),
                ('ac', models.BooleanField(default=False, help_text='Whether the apartment has air conditioning.')),
                ('owner', models.ForeignKey(default=None, help_text='The user that owns the apartment.', on_delete=django.db.models.deletion.CASCADE, related_name='apartments_owned', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['address'],
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_type', models.CharField(choices=[('electricity', 'Electricity'), ('gas', 'Gas'), ('water', 'Water'), ('rent', 'Rent'), ('other', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('paid', models.BooleanField(default=False, help_text='Whether the bill payed or not.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.FileField(blank=True, upload_to='bill_documents/')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='core.apartment')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('price_per_month', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(1)])),
                ('size', models.CharField(max_length=50)),
                ('window', models.BooleanField(default=False, null=True)),
                ('ac', models.BooleanField(default=False)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rooms', to='core.apartment')),
                ('renter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rooms_rented', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['price_per_month'],
            },
        ),
        migrations.CreateModel(
            name='RoomImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='core/images', validators=[core.validators.validate_file_size])),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.room')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.room')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(1)])),
                ('deposit_amount', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(1)])),
                ('terms_and_conditions', models.TextField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts_owned', to=settings.AUTH_USER_MODEL)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contract', to='core.room')),
            ],
        ),
        migrations.CreateModel(
            name='BillFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='bill_files/')),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='core.bill')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='The image of the apartment.', upload_to='core/images', validators=[core.validators.validate_file_size])),
                ('apartment', models.ForeignKey(help_text='The apartment the image belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.apartment')),
            ],
        ),
    ]
